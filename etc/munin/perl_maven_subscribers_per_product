#!/usr/bin/perl
use strict;
use warnings;

use File::Basename qw(dirname);
use Cwd            qw(abs_path);

my $root;

BEGIN {
	$root = dirname( dirname( dirname( abs_path($0) ) ) );
}

use lib "$root/lib";

use Perl::Maven::DB;
my $db = Perl::Maven::DB->new("$root/pm.db");

my $stats = $db->stats;

# TODO remove hard-coded 'perl_maven_cookbook'; but don't show the free products here
# because they will make the rest of the numbers meaninglessly small and the graph won't show them.

if ( not @ARGV ) {

	my $report = '';
	foreach my $code ( sort keys %{ $stats->{products} } ) {
		next if $code eq 'perl_maven_cookbook';
		$report .= "$stats->{products}{$code}{code}.value $stats->{products}{$code}{cnt}\n";
	}
	print $report;

	#printf $format, q{Total 'purchases':},     $stats->{all_subs};
	#printf $format, q{Distinct # of clients:}, $stats->{distinct_subs};
	#printf $format, 'All the users', $stats->{all_users};
	#printf $format, 'Verified',
	#	( $stats->{all_users} - $stats->{not_verified} );
	#printf $format, 'NOT Verified',             $stats->{not_verified};
	#printf $format, 'Verified but NO password', $stats->{no_password};
	exit;
}

if ( $ARGV[0] eq 'config' ) {
	print <<"END_CONFIG";
graph_title Number of subcribers per product
graph_vlabel sec
graph_category PerlMaven
END_CONFIG

	foreach my $code ( sort keys %{ $stats->{products} } ) {
		next if $code eq 'perl_maven_cookbook';
		print "$stats->{products}{$code}{code}.label $stats->{products}{$code}{code}\n";
	}
	exit;
}

