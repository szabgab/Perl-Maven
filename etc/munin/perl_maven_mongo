#!/usr/bin/perl
use strict;
use warnings;
use 5.010;

use File::Basename qw(basename);
use Data::Dumper   qw(Dumper);
use MongoDB;

if (@ARGV) {
	if ( $ARGV[0] eq 'config' ) {

		if ( basename($0) eq 'perl_maven_mongo_hits' ) {
			print <<"END_CONFIG";
graph_title MongoDB hits (24 hours)
graph_vlabel cnt
graph_category PerlMaven
END_CONFIG
			say 'total.label Total';
			say 'ok_200.label OK 200';
			say 'logged_in.label Logged in';
			exit;
		}

		if ( basename($0) eq 'perl_maven_mongo_elapsed_time' ) {
			print <<"END_CONFIG";
graph_title MongoDB average elapsed time
graph_vlabel sec
graph_category PerlMaven
END_CONFIG
			say 'all_24_hours.label Total';
			say 'ok_200_24_hours.label OK 200';
			say 'all_5_min.label Total';
			say 'ok_200_5_min.label OK 200';
			exit;
		}
	}

	exit;
}

my $client     = MongoDB::MongoClient->new( host => 'localhost', port => 27017 );
my $database   = $client->get_database('PerlMaven');
my $collection = $database->get_collection('logging');

if ( basename($0) eq 'perl_maven_mongo_hits' ) {
	my $time = time;
	say 'total.value ' . $collection->find( { time => { '$gt', $time - 60 * 60 * 24 } } )->count;
	say 'ok_200.value '
		. $collection->find(
		{
			'$and' => [ { time => { '$gt', $time - 60 * 60 * 24 } }, { status => 200 } ]
		}
	)->count;
	say 'logged_in.value '
		. $collection->find(
		{
			'$and' => [ { time => { '$gt', $time - 60 * 60 * 24 } }, { uid => { '$exists' => boolean::true } } ]
		}
	)->count;
	exit;
}

if ( basename($0) eq 'perl_maven_mongo_elapsed_time' ) {
	my $time = time;

	say 'all_24_hours.value ' . average( { time => { '$gt', $time - 60 * 60 * 24 } } );
	say 'ok_200_24_hours.value '
		. average(
		{
			'$and' => [ { time => { '$gt', $time - 60 * 60 * 24 } }, { status => 200 } ]
		}
		);
	say 'all_5_min.value ' . average( { time => { '$gt', $time - 60 * 5 } } );
	say 'ok_200_5_min.value '
		. average(
		{
			'$and' => [ { time => { '$gt', $time - 60 * 5 } }, { status => 200 } ]
		}
		);
	exit;
}

sub average {
	my $cond  = shift;
	my $count = $collection->find($cond)->count;
	return 0 if not $count;

	my $res = $collection->aggregate(
		[
			{ '$match' => $cond },
			{
				'$group' => {
					'_id' => '',
					total => {
						'$sum' => '$elapsed_time'
					}
				}
			}
		]
	);

	#say Dumper $res;
	return $res->[0]{total} / $count;
}

=pod

{
  "_id": ObjectId("547f4ad4600b460b3631"),
  "ip": "127.0.0.1",
  "time": 1417628380,
  "status": NumberLong("200"),
  "elapsed_time": 0.32529497146606445,
  "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36",
  "referrer": "https://perlmaven.com.local:5000/abc",
  "sid": "621662267931985042589654628876",
  "host": "perlmaven.com.local:5000",
  "page": "/"
}

=cut

